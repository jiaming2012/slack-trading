// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.2
// source: src/playground.proto

package playground

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetOpenOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *GetOpenOrdersResponse) Reset() {
	*x = GetOpenOrdersResponse{}
	mi := &file_src_playground_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOpenOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpenOrdersResponse) ProtoMessage() {}

func (x *GetOpenOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpenOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetOpenOrdersResponse) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{0}
}

func (x *GetOpenOrdersResponse) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type GetOpenOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaygroundId string `protobuf:"bytes,1,opt,name=playground_id,json=playgroundId,proto3" json:"playground_id,omitempty"`
	Symbol       string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *GetOpenOrdersRequest) Reset() {
	*x = GetOpenOrdersRequest{}
	mi := &file_src_playground_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOpenOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpenOrdersRequest) ProtoMessage() {}

func (x *GetOpenOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpenOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetOpenOrdersRequest) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{1}
}

func (x *GetOpenOrdersRequest) GetPlaygroundId() string {
	if x != nil {
		return x.PlaygroundId
	}
	return ""
}

func (x *GetOpenOrdersRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type CreateRepositoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol             string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	TimespanMultiplier uint32   `protobuf:"varint,2,opt,name=timespan_multiplier,json=timespanMultiplier,proto3" json:"timespan_multiplier,omitempty"`
	TimespanUnit       string   `protobuf:"bytes,3,opt,name=timespan_unit,json=timespanUnit,proto3" json:"timespan_unit,omitempty"`
	Indicators         []string `protobuf:"bytes,4,rep,name=indicators,proto3" json:"indicators,omitempty"`
	HistoryInDays      uint32   `protobuf:"varint,5,opt,name=history_in_days,json=historyInDays,proto3" json:"history_in_days,omitempty"`
}

func (x *CreateRepositoryRequest) Reset() {
	*x = CreateRepositoryRequest{}
	mi := &file_src_playground_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepositoryRequest) ProtoMessage() {}

func (x *CreateRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepositoryRequest.ProtoReflect.Descriptor instead.
func (*CreateRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRepositoryRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CreateRepositoryRequest) GetTimespanMultiplier() uint32 {
	if x != nil {
		return x.TimespanMultiplier
	}
	return 0
}

func (x *CreateRepositoryRequest) GetTimespanUnit() string {
	if x != nil {
		return x.TimespanUnit
	}
	return ""
}

func (x *CreateRepositoryRequest) GetIndicators() []string {
	if x != nil {
		return x.Indicators
	}
	return nil
}

func (x *CreateRepositoryRequest) GetHistoryInDays() uint32 {
	if x != nil {
		return x.HistoryInDays
	}
	return 0
}

type CreatePolygonPlaygroundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance      float64                    `protobuf:"fixed64,1,opt,name=balance,proto3" json:"balance,omitempty"`
	StartDate    string                     `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	StopDate     string                     `protobuf:"bytes,3,opt,name=stop_date,json=stopDate,proto3" json:"stop_date,omitempty"`
	Repositories []*CreateRepositoryRequest `protobuf:"bytes,4,rep,name=repositories,proto3" json:"repositories,omitempty"`
	Environment  string                     `protobuf:"bytes,5,opt,name=environment,proto3" json:"environment,omitempty"`
}

func (x *CreatePolygonPlaygroundRequest) Reset() {
	*x = CreatePolygonPlaygroundRequest{}
	mi := &file_src_playground_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePolygonPlaygroundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePolygonPlaygroundRequest) ProtoMessage() {}

func (x *CreatePolygonPlaygroundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePolygonPlaygroundRequest.ProtoReflect.Descriptor instead.
func (*CreatePolygonPlaygroundRequest) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePolygonPlaygroundRequest) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *CreatePolygonPlaygroundRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreatePolygonPlaygroundRequest) GetStopDate() string {
	if x != nil {
		return x.StopDate
	}
	return ""
}

func (x *CreatePolygonPlaygroundRequest) GetRepositories() []*CreateRepositoryRequest {
	if x != nil {
		return x.Repositories
	}
	return nil
}

func (x *CreatePolygonPlaygroundRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

type GetCandlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaygroundId    string `protobuf:"bytes,1,opt,name=playground_id,json=playgroundId,proto3" json:"playground_id,omitempty"`
	Symbol          string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	PeriodInSeconds int32  `protobuf:"varint,3,opt,name=period_in_seconds,json=periodInSeconds,proto3" json:"period_in_seconds,omitempty"`
	FromRTF3339     string `protobuf:"bytes,4,opt,name=fromRTF3339,proto3" json:"fromRTF3339,omitempty"`
	ToRTF3339       string `protobuf:"bytes,5,opt,name=toRTF3339,proto3" json:"toRTF3339,omitempty"`
}

func (x *GetCandlesRequest) Reset() {
	*x = GetCandlesRequest{}
	mi := &file_src_playground_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCandlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandlesRequest) ProtoMessage() {}

func (x *GetCandlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandlesRequest.ProtoReflect.Descriptor instead.
func (*GetCandlesRequest) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{4}
}

func (x *GetCandlesRequest) GetPlaygroundId() string {
	if x != nil {
		return x.PlaygroundId
	}
	return ""
}

func (x *GetCandlesRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetCandlesRequest) GetPeriodInSeconds() int32 {
	if x != nil {
		return x.PeriodInSeconds
	}
	return 0
}

func (x *GetCandlesRequest) GetFromRTF3339() string {
	if x != nil {
		return x.FromRTF3339
	}
	return ""
}

func (x *GetCandlesRequest) GetToRTF3339() string {
	if x != nil {
		return x.ToRTF3339
	}
	return ""
}

type GetCandlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bars []*Bar `protobuf:"bytes,1,rep,name=bars,proto3" json:"bars,omitempty"`
}

func (x *GetCandlesResponse) Reset() {
	*x = GetCandlesResponse{}
	mi := &file_src_playground_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCandlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandlesResponse) ProtoMessage() {}

func (x *GetCandlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandlesResponse.ProtoReflect.Descriptor instead.
func (*GetCandlesResponse) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{5}
}

func (x *GetCandlesResponse) GetBars() []*Bar {
	if x != nil {
		return x.Bars
	}
	return nil
}

type CreatePlaygroundResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreatePlaygroundResponse) Reset() {
	*x = CreatePlaygroundResponse{}
	mi := &file_src_playground_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePlaygroundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaygroundResponse) ProtoMessage() {}

func (x *CreatePlaygroundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaygroundResponse.ProtoReflect.Descriptor instead.
func (*CreatePlaygroundResponse) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePlaygroundResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AccountMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate       string   `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate         string   `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Symbols         []string `protobuf:"bytes,3,rep,name=symbols,proto3" json:"symbols,omitempty"`
	StartingBalance float64  `protobuf:"fixed64,4,opt,name=starting_balance,json=startingBalance,proto3" json:"starting_balance,omitempty"`
	Environment     string   `protobuf:"bytes,5,opt,name=environment,proto3" json:"environment,omitempty"`
}

func (x *AccountMeta) Reset() {
	*x = AccountMeta{}
	mi := &file_src_playground_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMeta) ProtoMessage() {}

func (x *AccountMeta) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMeta.ProtoReflect.Descriptor instead.
func (*AccountMeta) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{7}
}

func (x *AccountMeta) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *AccountMeta) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *AccountMeta) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

func (x *AccountMeta) GetStartingBalance() float64 {
	if x != nil {
		return x.StartingBalance
	}
	return 0
}

func (x *AccountMeta) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

type GetAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaygroundId string `protobuf:"bytes,1,opt,name=playground_id,json=playgroundId,proto3" json:"playground_id,omitempty"`
	FetchOrders  bool   `protobuf:"varint,2,opt,name=fetch_orders,json=fetchOrders,proto3" json:"fetch_orders,omitempty"`
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	mi := &file_src_playground_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{8}
}

func (x *GetAccountRequest) GetPlaygroundId() string {
	if x != nil {
		return x.PlaygroundId
	}
	return ""
}

func (x *GetAccountRequest) GetFetchOrders() bool {
	if x != nil {
		return x.FetchOrders
	}
	return false
}

type GetAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta       *AccountMeta         `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Balance    float64              `protobuf:"fixed64,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Equity     float64              `protobuf:"fixed64,3,opt,name=equity,proto3" json:"equity,omitempty"`
	FreeMargin float64              `protobuf:"fixed64,4,opt,name=free_margin,json=freeMargin,proto3" json:"free_margin,omitempty"`
	Orders     []*Order             `protobuf:"bytes,5,rep,name=orders,proto3" json:"orders,omitempty"`
	Positions  map[string]*Position `protobuf:"bytes,6,rep,name=positions,proto3" json:"positions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAccountResponse) Reset() {
	*x = GetAccountResponse{}
	mi := &file_src_playground_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountResponse) ProtoMessage() {}

func (x *GetAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountResponse.ProtoReflect.Descriptor instead.
func (*GetAccountResponse) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{9}
}

func (x *GetAccountResponse) GetMeta() *AccountMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetAccountResponse) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *GetAccountResponse) GetEquity() float64 {
	if x != nil {
		return x.Equity
	}
	return 0
}

func (x *GetAccountResponse) GetFreeMargin() float64 {
	if x != nil {
		return x.FreeMargin
	}
	return 0
}

func (x *GetAccountResponse) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *GetAccountResponse) GetPositions() map[string]*Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity          float64 `protobuf:"fixed64,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	CostBasis         float64 `protobuf:"fixed64,2,opt,name=cost_basis,json=costBasis,proto3" json:"cost_basis,omitempty"`
	Pl                float64 `protobuf:"fixed64,3,opt,name=pl,proto3" json:"pl,omitempty"`
	MaintenanceMargin float64 `protobuf:"fixed64,4,opt,name=maintenance_margin,json=maintenanceMargin,proto3" json:"maintenance_margin,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_src_playground_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{10}
}

func (x *Position) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Position) GetCostBasis() float64 {
	if x != nil {
		return x.CostBasis
	}
	return 0
}

func (x *Position) GetPl() float64 {
	if x != nil {
		return x.Pl
	}
	return 0
}

func (x *Position) GetMaintenanceMargin() float64 {
	if x != nil {
		return x.MaintenanceMargin
	}
	return 0
}

type PlaceOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaygroundId   string  `protobuf:"bytes,1,opt,name=playground_id,json=playgroundId,proto3" json:"playground_id,omitempty"`
	Symbol         string  `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	AssetClass     string  `protobuf:"bytes,3,opt,name=asset_class,json=assetClass,proto3" json:"asset_class,omitempty"`
	Quantity       float64 `protobuf:"fixed64,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Side           string  `protobuf:"bytes,5,opt,name=side,proto3" json:"side,omitempty"`
	Type           string  `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Duration       string  `protobuf:"bytes,7,opt,name=duration,proto3" json:"duration,omitempty"`
	Tag            string  `protobuf:"bytes,8,opt,name=tag,proto3" json:"tag,omitempty"`
	RequestedPrice float64 `protobuf:"fixed64,9,opt,name=requested_price,json=requestedPrice,proto3" json:"requested_price,omitempty"`
}

func (x *PlaceOrderRequest) Reset() {
	*x = PlaceOrderRequest{}
	mi := &file_src_playground_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceOrderRequest) ProtoMessage() {}

func (x *PlaceOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceOrderRequest.ProtoReflect.Descriptor instead.
func (*PlaceOrderRequest) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{11}
}

func (x *PlaceOrderRequest) GetPlaygroundId() string {
	if x != nil {
		return x.PlaygroundId
	}
	return ""
}

func (x *PlaceOrderRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *PlaceOrderRequest) GetAssetClass() string {
	if x != nil {
		return x.AssetClass
	}
	return ""
}

func (x *PlaceOrderRequest) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *PlaceOrderRequest) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *PlaceOrderRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PlaceOrderRequest) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *PlaceOrderRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *PlaceOrderRequest) GetRequestedPrice() float64 {
	if x != nil {
		return x.RequestedPrice
	}
	return 0
}

type NextTickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlaygroundId string `protobuf:"bytes,1,opt,name=playground_id,json=playgroundId,proto3" json:"playground_id,omitempty"`
	Seconds      uint64 `protobuf:"varint,2,opt,name=seconds,proto3" json:"seconds,omitempty"`
	IsPreview    bool   `protobuf:"varint,3,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
}

func (x *NextTickRequest) Reset() {
	*x = NextTickRequest{}
	mi := &file_src_playground_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextTickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextTickRequest) ProtoMessage() {}

func (x *NextTickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextTickRequest.ProtoReflect.Descriptor instead.
func (*NextTickRequest) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{12}
}

func (x *NextTickRequest) GetPlaygroundId() string {
	if x != nil {
		return x.PlaygroundId
	}
	return ""
}

func (x *NextTickRequest) GetSeconds() uint64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *NextTickRequest) GetIsPreview() bool {
	if x != nil {
		return x.IsPreview
	}
	return false
}

type TickDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewTrades          []*Trade          `protobuf:"bytes,1,rep,name=new_trades,json=newTrades,proto3" json:"new_trades,omitempty"`
	NewCandles         []*Candle         `protobuf:"bytes,2,rep,name=new_candles,json=newCandles,proto3" json:"new_candles,omitempty"`
	InvalidOrders      []*Order          `protobuf:"bytes,3,rep,name=invalid_orders,json=invalidOrders,proto3" json:"invalid_orders,omitempty"`
	Events             []*TickDeltaEvent `protobuf:"bytes,4,rep,name=events,proto3" json:"events,omitempty"`
	CurrentTime        string            `protobuf:"bytes,5,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
	IsBacktestComplete bool              `protobuf:"varint,6,opt,name=is_backtest_complete,json=isBacktestComplete,proto3" json:"is_backtest_complete,omitempty"`
}

func (x *TickDelta) Reset() {
	*x = TickDelta{}
	mi := &file_src_playground_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TickDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickDelta) ProtoMessage() {}

func (x *TickDelta) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickDelta.ProtoReflect.Descriptor instead.
func (*TickDelta) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{13}
}

func (x *TickDelta) GetNewTrades() []*Trade {
	if x != nil {
		return x.NewTrades
	}
	return nil
}

func (x *TickDelta) GetNewCandles() []*Candle {
	if x != nil {
		return x.NewCandles
	}
	return nil
}

func (x *TickDelta) GetInvalidOrders() []*Order {
	if x != nil {
		return x.InvalidOrders
	}
	return nil
}

func (x *TickDelta) GetEvents() []*TickDeltaEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *TickDelta) GetCurrentTime() string {
	if x != nil {
		return x.CurrentTime
	}
	return ""
}

func (x *TickDelta) GetIsBacktestComplete() bool {
	if x != nil {
		return x.IsBacktestComplete
	}
	return false
}

type LiquidationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrdersPlaced []*Order `protobuf:"bytes,1,rep,name=orders_placed,json=ordersPlaced,proto3" json:"orders_placed,omitempty"`
}

func (x *LiquidationEvent) Reset() {
	*x = LiquidationEvent{}
	mi := &file_src_playground_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiquidationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiquidationEvent) ProtoMessage() {}

func (x *LiquidationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiquidationEvent.ProtoReflect.Descriptor instead.
func (*LiquidationEvent) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{14}
}

func (x *LiquidationEvent) GetOrdersPlaced() []*Order {
	if x != nil {
		return x.OrdersPlaced
	}
	return nil
}

type TickDeltaEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	LiquidationEvent *LiquidationEvent `protobuf:"bytes,2,opt,name=liquidation_event,json=liquidationEvent,proto3" json:"liquidation_event,omitempty"`
}

func (x *TickDeltaEvent) Reset() {
	*x = TickDeltaEvent{}
	mi := &file_src_playground_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TickDeltaEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickDeltaEvent) ProtoMessage() {}

func (x *TickDeltaEvent) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickDeltaEvent.ProtoReflect.Descriptor instead.
func (*TickDeltaEvent) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{15}
}

func (x *TickDeltaEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TickDeltaEvent) GetLiquidationEvent() *LiquidationEvent {
	if x != nil {
		return x.LiquidationEvent
	}
	return nil
}

type Bar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volume                float64 `protobuf:"fixed64,1,opt,name=volume,proto3" json:"volume,omitempty"`
	Open                  float64 `protobuf:"fixed64,2,opt,name=open,proto3" json:"open,omitempty"`
	Close                 float64 `protobuf:"fixed64,3,opt,name=close,proto3" json:"close,omitempty"`
	High                  float64 `protobuf:"fixed64,4,opt,name=high,proto3" json:"high,omitempty"`
	Low                   float64 `protobuf:"fixed64,5,opt,name=low,proto3" json:"low,omitempty"`
	Datetime              string  `protobuf:"bytes,6,opt,name=datetime,proto3" json:"datetime,omitempty"`
	SuperT_50_3           float64 `protobuf:"fixed64,7,opt,name=superT_50_3,json=superT503,proto3" json:"superT_50_3,omitempty"`
	SuperD_50_3           int32   `protobuf:"varint,8,opt,name=superD_50_3,json=superD503,proto3" json:"superD_50_3,omitempty"`
	SuperL_50_3           float64 `protobuf:"fixed64,9,opt,name=superL_50_3,json=superL503,proto3" json:"superL_50_3,omitempty"`
	SuperS_50_3           float64 `protobuf:"fixed64,10,opt,name=superS_50_3,json=superS503,proto3" json:"superS_50_3,omitempty"`
	StochrsiK_14_14_3_3   float64 `protobuf:"fixed64,11,opt,name=stochrsi_k_14_14_3_3,json=stochrsiK141433,proto3" json:"stochrsi_k_14_14_3_3,omitempty"`
	StochrsiD_14_14_3_3   float64 `protobuf:"fixed64,12,opt,name=stochrsi_d_14_14_3_3,json=stochrsiD141433,proto3" json:"stochrsi_d_14_14_3_3,omitempty"`
	Atr_14                float64 `protobuf:"fixed64,13,opt,name=atr_14,json=atr14,proto3" json:"atr_14,omitempty"`
	Sma_50                float64 `protobuf:"fixed64,14,opt,name=sma_50,json=sma50,proto3" json:"sma_50,omitempty"`
	Sma_100               float64 `protobuf:"fixed64,15,opt,name=sma_100,json=sma100,proto3" json:"sma_100,omitempty"`
	Sma_200               float64 `protobuf:"fixed64,16,opt,name=sma_200,json=sma200,proto3" json:"sma_200,omitempty"`
	StochrsiCrossAbove_20 bool    `protobuf:"varint,17,opt,name=stochrsi_cross_above_20,json=stochrsiCrossAbove20,proto3" json:"stochrsi_cross_above_20,omitempty"`
	StochrsiCrossBelow_80 bool    `protobuf:"varint,18,opt,name=stochrsi_cross_below_80,json=stochrsiCrossBelow80,proto3" json:"stochrsi_cross_below_80,omitempty"`
	CloseLag_1            float64 `protobuf:"fixed64,19,opt,name=close_lag_1,json=closeLag1,proto3" json:"close_lag_1,omitempty"`
	CloseLag_2            float64 `protobuf:"fixed64,20,opt,name=close_lag_2,json=closeLag2,proto3" json:"close_lag_2,omitempty"`
	CloseLag_3            float64 `protobuf:"fixed64,21,opt,name=close_lag_3,json=closeLag3,proto3" json:"close_lag_3,omitempty"`
	CloseLag_4            float64 `protobuf:"fixed64,22,opt,name=close_lag_4,json=closeLag4,proto3" json:"close_lag_4,omitempty"`
	CloseLag_5            float64 `protobuf:"fixed64,23,opt,name=close_lag_5,json=closeLag5,proto3" json:"close_lag_5,omitempty"`
	CloseLag_6            float64 `protobuf:"fixed64,24,opt,name=close_lag_6,json=closeLag6,proto3" json:"close_lag_6,omitempty"`
	CloseLag_7            float64 `protobuf:"fixed64,25,opt,name=close_lag_7,json=closeLag7,proto3" json:"close_lag_7,omitempty"`
	CloseLag_8            float64 `protobuf:"fixed64,26,opt,name=close_lag_8,json=closeLag8,proto3" json:"close_lag_8,omitempty"`
	CloseLag_9            float64 `protobuf:"fixed64,27,opt,name=close_lag_9,json=closeLag9,proto3" json:"close_lag_9,omitempty"`
	CloseLag_10           float64 `protobuf:"fixed64,28,opt,name=close_lag_10,json=closeLag10,proto3" json:"close_lag_10,omitempty"`
	CloseLag_11           float64 `protobuf:"fixed64,29,opt,name=close_lag_11,json=closeLag11,proto3" json:"close_lag_11,omitempty"`
	CloseLag_12           float64 `protobuf:"fixed64,30,opt,name=close_lag_12,json=closeLag12,proto3" json:"close_lag_12,omitempty"`
	CloseLag_13           float64 `protobuf:"fixed64,31,opt,name=close_lag_13,json=closeLag13,proto3" json:"close_lag_13,omitempty"`
	CloseLag_14           float64 `protobuf:"fixed64,32,opt,name=close_lag_14,json=closeLag14,proto3" json:"close_lag_14,omitempty"`
	CloseLag_15           float64 `protobuf:"fixed64,33,opt,name=close_lag_15,json=closeLag15,proto3" json:"close_lag_15,omitempty"`
	CloseLag_16           float64 `protobuf:"fixed64,34,opt,name=close_lag_16,json=closeLag16,proto3" json:"close_lag_16,omitempty"`
	CloseLag_17           float64 `protobuf:"fixed64,35,opt,name=close_lag_17,json=closeLag17,proto3" json:"close_lag_17,omitempty"`
	CloseLag_18           float64 `protobuf:"fixed64,36,opt,name=close_lag_18,json=closeLag18,proto3" json:"close_lag_18,omitempty"`
	CloseLag_19           float64 `protobuf:"fixed64,37,opt,name=close_lag_19,json=closeLag19,proto3" json:"close_lag_19,omitempty"`
	CloseLag_20           float64 `protobuf:"fixed64,38,opt,name=close_lag_20,json=closeLag20,proto3" json:"close_lag_20,omitempty"`
}

func (x *Bar) Reset() {
	*x = Bar{}
	mi := &file_src_playground_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bar) ProtoMessage() {}

func (x *Bar) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bar.ProtoReflect.Descriptor instead.
func (*Bar) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{16}
}

func (x *Bar) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Bar) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Bar) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Bar) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Bar) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Bar) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *Bar) GetSuperT_50_3() float64 {
	if x != nil {
		return x.SuperT_50_3
	}
	return 0
}

func (x *Bar) GetSuperD_50_3() int32 {
	if x != nil {
		return x.SuperD_50_3
	}
	return 0
}

func (x *Bar) GetSuperL_50_3() float64 {
	if x != nil {
		return x.SuperL_50_3
	}
	return 0
}

func (x *Bar) GetSuperS_50_3() float64 {
	if x != nil {
		return x.SuperS_50_3
	}
	return 0
}

func (x *Bar) GetStochrsiK_14_14_3_3() float64 {
	if x != nil {
		return x.StochrsiK_14_14_3_3
	}
	return 0
}

func (x *Bar) GetStochrsiD_14_14_3_3() float64 {
	if x != nil {
		return x.StochrsiD_14_14_3_3
	}
	return 0
}

func (x *Bar) GetAtr_14() float64 {
	if x != nil {
		return x.Atr_14
	}
	return 0
}

func (x *Bar) GetSma_50() float64 {
	if x != nil {
		return x.Sma_50
	}
	return 0
}

func (x *Bar) GetSma_100() float64 {
	if x != nil {
		return x.Sma_100
	}
	return 0
}

func (x *Bar) GetSma_200() float64 {
	if x != nil {
		return x.Sma_200
	}
	return 0
}

func (x *Bar) GetStochrsiCrossAbove_20() bool {
	if x != nil {
		return x.StochrsiCrossAbove_20
	}
	return false
}

func (x *Bar) GetStochrsiCrossBelow_80() bool {
	if x != nil {
		return x.StochrsiCrossBelow_80
	}
	return false
}

func (x *Bar) GetCloseLag_1() float64 {
	if x != nil {
		return x.CloseLag_1
	}
	return 0
}

func (x *Bar) GetCloseLag_2() float64 {
	if x != nil {
		return x.CloseLag_2
	}
	return 0
}

func (x *Bar) GetCloseLag_3() float64 {
	if x != nil {
		return x.CloseLag_3
	}
	return 0
}

func (x *Bar) GetCloseLag_4() float64 {
	if x != nil {
		return x.CloseLag_4
	}
	return 0
}

func (x *Bar) GetCloseLag_5() float64 {
	if x != nil {
		return x.CloseLag_5
	}
	return 0
}

func (x *Bar) GetCloseLag_6() float64 {
	if x != nil {
		return x.CloseLag_6
	}
	return 0
}

func (x *Bar) GetCloseLag_7() float64 {
	if x != nil {
		return x.CloseLag_7
	}
	return 0
}

func (x *Bar) GetCloseLag_8() float64 {
	if x != nil {
		return x.CloseLag_8
	}
	return 0
}

func (x *Bar) GetCloseLag_9() float64 {
	if x != nil {
		return x.CloseLag_9
	}
	return 0
}

func (x *Bar) GetCloseLag_10() float64 {
	if x != nil {
		return x.CloseLag_10
	}
	return 0
}

func (x *Bar) GetCloseLag_11() float64 {
	if x != nil {
		return x.CloseLag_11
	}
	return 0
}

func (x *Bar) GetCloseLag_12() float64 {
	if x != nil {
		return x.CloseLag_12
	}
	return 0
}

func (x *Bar) GetCloseLag_13() float64 {
	if x != nil {
		return x.CloseLag_13
	}
	return 0
}

func (x *Bar) GetCloseLag_14() float64 {
	if x != nil {
		return x.CloseLag_14
	}
	return 0
}

func (x *Bar) GetCloseLag_15() float64 {
	if x != nil {
		return x.CloseLag_15
	}
	return 0
}

func (x *Bar) GetCloseLag_16() float64 {
	if x != nil {
		return x.CloseLag_16
	}
	return 0
}

func (x *Bar) GetCloseLag_17() float64 {
	if x != nil {
		return x.CloseLag_17
	}
	return 0
}

func (x *Bar) GetCloseLag_18() float64 {
	if x != nil {
		return x.CloseLag_18
	}
	return 0
}

func (x *Bar) GetCloseLag_19() float64 {
	if x != nil {
		return x.CloseLag_19
	}
	return 0
}

func (x *Bar) GetCloseLag_20() float64 {
	if x != nil {
		return x.CloseLag_20
	}
	return 0
}

type Candle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Period int32  `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
	Bar    *Bar   `protobuf:"bytes,3,opt,name=bar,proto3" json:"bar,omitempty"`
}

func (x *Candle) Reset() {
	*x = Candle{}
	mi := &file_src_playground_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Candle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candle) ProtoMessage() {}

func (x *Candle) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candle.ProtoReflect.Descriptor instead.
func (*Candle) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{17}
}

func (x *Candle) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Candle) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *Candle) GetBar() *Bar {
	if x != nil {
		return x.Bar
	}
	return nil
}

type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Symbol     string  `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	CreateDate string  `protobuf:"bytes,3,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`
	Quantity   float64 `protobuf:"fixed64,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price      float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	mi := &file_src_playground_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{18}
}

func (x *Trade) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Trade) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Trade) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *Trade) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Trade) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Class          string   `protobuf:"bytes,2,opt,name=class,proto3" json:"class,omitempty"`
	Symbol         string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Side           string   `protobuf:"bytes,4,opt,name=side,proto3" json:"side,omitempty"`
	Quantity       float64  `protobuf:"fixed64,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Type           string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Duration       string   `protobuf:"bytes,7,opt,name=duration,proto3" json:"duration,omitempty"`
	Price          float64  `protobuf:"fixed64,8,opt,name=price,proto3" json:"price,omitempty"`
	RequestedPrice float64  `protobuf:"fixed64,9,opt,name=requested_price,json=requestedPrice,proto3" json:"requested_price,omitempty"`
	StopPrice      float64  `protobuf:"fixed64,10,opt,name=stop_price,json=stopPrice,proto3" json:"stop_price,omitempty"`
	Tag            string   `protobuf:"bytes,11,opt,name=tag,proto3" json:"tag,omitempty"`
	Trades         []*Trade `protobuf:"bytes,12,rep,name=trades,proto3" json:"trades,omitempty"`
	Status         string   `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	RejectReason   string   `protobuf:"bytes,14,opt,name=reject_reason,json=rejectReason,proto3" json:"reject_reason,omitempty"`
	CreateDate     string   `protobuf:"bytes,15,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`
	ClosedBy       []*Trade `protobuf:"bytes,16,rep,name=closed_by,json=closedBy,proto3" json:"closed_by,omitempty"`
	Closes         []*Order `protobuf:"bytes,17,rep,name=closes,proto3" json:"closes,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	mi := &file_src_playground_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_src_playground_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_src_playground_proto_rawDescGZIP(), []int{19}
}

func (x *Order) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Order) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *Order) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Order) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *Order) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Order) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Order) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Order) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Order) GetRequestedPrice() float64 {
	if x != nil {
		return x.RequestedPrice
	}
	return 0
}

func (x *Order) GetStopPrice() float64 {
	if x != nil {
		return x.StopPrice
	}
	return 0
}

func (x *Order) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Order) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

func (x *Order) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Order) GetRejectReason() string {
	if x != nil {
		return x.RejectReason
	}
	return ""
}

func (x *Order) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *Order) GetClosedBy() []*Trade {
	if x != nil {
		return x.ClosedBy
	}
	return nil
}

func (x *Order) GetCloses() []*Order {
	if x != nil {
		return x.Closes
	}
	return nil
}

var File_src_playground_proto protoreflect.FileDescriptor

var file_src_playground_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x53, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0xcf, 0x01, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x2f, 0x0a, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x22, 0xe1,
	0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74,
	0x6f, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x74, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f,
	0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x52, 0x54, 0x46, 0x33, 0x33, 0x33, 0x39,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x52, 0x54, 0x46, 0x33,
	0x33, 0x33, 0x39, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x52, 0x54, 0x46, 0x33, 0x33, 0x33, 0x39,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x52, 0x54, 0x46, 0x33, 0x33, 0x33,
	0x39, 0x22, 0x39, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x62, 0x61, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x2e, 0x42, 0x61, 0x72, 0x52, 0x04, 0x62, 0x61, 0x72, 0x73, 0x22, 0x2a, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x5b, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x65, 0x74, 0x63, 0x68,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0xe0, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x71, 0x75, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x65, 0x71, 0x75, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x72, 0x65, 0x65, 0x5f, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x66, 0x72, 0x65, 0x65, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x29, 0x0a,
	0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x4b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x52, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x84, 0x01, 0x0a, 0x08, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x42, 0x61, 0x73, 0x69,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x70,
	0x6c, 0x12, 0x2d, 0x0a, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x22, 0x8c, 0x02, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x69, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22,
	0x6f, 0x0a, 0x0f, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x22, 0xb5, 0x02, 0x0a, 0x09, 0x54, 0x69, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x30,
	0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x12, 0x33, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x43, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x0d, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x32, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x54, 0x69, 0x63,
	0x6b, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x4a, 0x0a, 0x10, 0x4c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0d,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x64, 0x22, 0x6f, 0x0a, 0x0e, 0x54, 0x69, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x11, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x2e, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x10, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xcb, 0x09, 0x0a, 0x03, 0x42, 0x61, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68,
	0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x65, 0x72, 0x54, 0x5f, 0x35, 0x30, 0x5f, 0x33,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x54, 0x35, 0x30,
	0x33, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x65, 0x72, 0x44, 0x5f, 0x35, 0x30, 0x5f, 0x33,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x44, 0x35, 0x30,
	0x33, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x65, 0x72, 0x4c, 0x5f, 0x35, 0x30, 0x5f, 0x33,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x4c, 0x35, 0x30,
	0x33, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x65, 0x72, 0x53, 0x5f, 0x35, 0x30, 0x5f, 0x33,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x53, 0x35, 0x30,
	0x33, 0x12, 0x2d, 0x0a, 0x14, 0x73, 0x74, 0x6f, 0x63, 0x68, 0x72, 0x73, 0x69, 0x5f, 0x6b, 0x5f,
	0x31, 0x34, 0x5f, 0x31, 0x34, 0x5f, 0x33, 0x5f, 0x33, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0f, 0x73, 0x74, 0x6f, 0x63, 0x68, 0x72, 0x73, 0x69, 0x4b, 0x31, 0x34, 0x31, 0x34, 0x33, 0x33,
	0x12, 0x2d, 0x0a, 0x14, 0x73, 0x74, 0x6f, 0x63, 0x68, 0x72, 0x73, 0x69, 0x5f, 0x64, 0x5f, 0x31,
	0x34, 0x5f, 0x31, 0x34, 0x5f, 0x33, 0x5f, 0x33, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x73, 0x74, 0x6f, 0x63, 0x68, 0x72, 0x73, 0x69, 0x44, 0x31, 0x34, 0x31, 0x34, 0x33, 0x33, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x74, 0x72, 0x5f, 0x31, 0x34, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x61, 0x74, 0x72, 0x31, 0x34, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6d, 0x61, 0x5f, 0x35, 0x30,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x6d, 0x61, 0x35, 0x30, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6d, 0x61, 0x5f, 0x31, 0x30, 0x30, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x73, 0x6d, 0x61, 0x31, 0x30, 0x30, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6d, 0x61, 0x5f, 0x32, 0x30,
	0x30, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x6d, 0x61, 0x32, 0x30, 0x30, 0x12,
	0x35, 0x0a, 0x17, 0x73, 0x74, 0x6f, 0x63, 0x68, 0x72, 0x73, 0x69, 0x5f, 0x63, 0x72, 0x6f, 0x73,
	0x73, 0x5f, 0x61, 0x62, 0x6f, 0x76, 0x65, 0x5f, 0x32, 0x30, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x73, 0x74, 0x6f, 0x63, 0x68, 0x72, 0x73, 0x69, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x41,
	0x62, 0x6f, 0x76, 0x65, 0x32, 0x30, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x74, 0x6f, 0x63, 0x68, 0x72,
	0x73, 0x69, 0x5f, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x5f, 0x38,
	0x30, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x73, 0x74, 0x6f, 0x63, 0x68, 0x72, 0x73,
	0x69, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x42, 0x65, 0x6c, 0x6f, 0x77, 0x38, 0x30, 0x12, 0x1e, 0x0a,
	0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x31, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x31, 0x12, 0x1e, 0x0a,
	0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x32, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x32, 0x12, 0x1e, 0x0a,
	0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x33, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x33, 0x12, 0x1e, 0x0a,
	0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x34, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x34, 0x12, 0x1e, 0x0a,
	0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x35, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x35, 0x12, 0x1e, 0x0a,
	0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x36, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x36, 0x12, 0x1e, 0x0a,
	0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x37, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x37, 0x12, 0x1e, 0x0a,
	0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x38, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x38, 0x12, 0x1e, 0x0a,
	0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x39, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x39, 0x12, 0x20, 0x0a,
	0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x31, 0x30, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x31, 0x30, 0x12,
	0x20, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x31, 0x31, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x31,
	0x31, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x31,
	0x32, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61,
	0x67, 0x31, 0x32, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67,
	0x5f, 0x31, 0x33, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x4c, 0x61, 0x67, 0x31, 0x33, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c,
	0x61, 0x67, 0x5f, 0x31, 0x34, 0x18, 0x20, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x4c, 0x61, 0x67, 0x31, 0x34, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x31, 0x35, 0x18, 0x21, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x31, 0x35, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x31, 0x36, 0x18, 0x22, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x31, 0x36, 0x12, 0x20, 0x0a, 0x0c, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x31, 0x37, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x31, 0x37, 0x12, 0x20, 0x0a,
	0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x31, 0x38, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x31, 0x38, 0x12,
	0x20, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x31, 0x39, 0x18,
	0x25, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61, 0x67, 0x31,
	0x39, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x67, 0x5f, 0x32,
	0x30, 0x18, 0x26, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x61,
	0x67, 0x32, 0x30, 0x22, 0x5b, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x21, 0x0a,
	0x03, 0x62, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x42, 0x61, 0x72, 0x52, 0x03, 0x62, 0x61, 0x72,
	0x22, 0x82, 0x01, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xf9, 0x03, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x61, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x29, 0x0a,
	0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x08, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x73,
	0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x73, 0x32, 0xe9, 0x03, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2a, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x08, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x3e, 0x0a,
	0x0a, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x4b, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0e, 0x5a,
	0x0c, 0x2e, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_playground_proto_rawDescOnce sync.Once
	file_src_playground_proto_rawDescData = file_src_playground_proto_rawDesc
)

func file_src_playground_proto_rawDescGZIP() []byte {
	file_src_playground_proto_rawDescOnce.Do(func() {
		file_src_playground_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_playground_proto_rawDescData)
	})
	return file_src_playground_proto_rawDescData
}

var file_src_playground_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_src_playground_proto_goTypes = []any{
	(*GetOpenOrdersResponse)(nil),          // 0: playground.GetOpenOrdersResponse
	(*GetOpenOrdersRequest)(nil),           // 1: playground.GetOpenOrdersRequest
	(*CreateRepositoryRequest)(nil),        // 2: playground.CreateRepositoryRequest
	(*CreatePolygonPlaygroundRequest)(nil), // 3: playground.CreatePolygonPlaygroundRequest
	(*GetCandlesRequest)(nil),              // 4: playground.GetCandlesRequest
	(*GetCandlesResponse)(nil),             // 5: playground.GetCandlesResponse
	(*CreatePlaygroundResponse)(nil),       // 6: playground.CreatePlaygroundResponse
	(*AccountMeta)(nil),                    // 7: playground.AccountMeta
	(*GetAccountRequest)(nil),              // 8: playground.GetAccountRequest
	(*GetAccountResponse)(nil),             // 9: playground.GetAccountResponse
	(*Position)(nil),                       // 10: playground.Position
	(*PlaceOrderRequest)(nil),              // 11: playground.PlaceOrderRequest
	(*NextTickRequest)(nil),                // 12: playground.NextTickRequest
	(*TickDelta)(nil),                      // 13: playground.TickDelta
	(*LiquidationEvent)(nil),               // 14: playground.LiquidationEvent
	(*TickDeltaEvent)(nil),                 // 15: playground.TickDeltaEvent
	(*Bar)(nil),                            // 16: playground.Bar
	(*Candle)(nil),                         // 17: playground.Candle
	(*Trade)(nil),                          // 18: playground.Trade
	(*Order)(nil),                          // 19: playground.Order
	nil,                                    // 20: playground.GetAccountResponse.PositionsEntry
}
var file_src_playground_proto_depIdxs = []int32{
	19, // 0: playground.GetOpenOrdersResponse.orders:type_name -> playground.Order
	2,  // 1: playground.CreatePolygonPlaygroundRequest.repositories:type_name -> playground.CreateRepositoryRequest
	16, // 2: playground.GetCandlesResponse.bars:type_name -> playground.Bar
	7,  // 3: playground.GetAccountResponse.meta:type_name -> playground.AccountMeta
	19, // 4: playground.GetAccountResponse.orders:type_name -> playground.Order
	20, // 5: playground.GetAccountResponse.positions:type_name -> playground.GetAccountResponse.PositionsEntry
	18, // 6: playground.TickDelta.new_trades:type_name -> playground.Trade
	17, // 7: playground.TickDelta.new_candles:type_name -> playground.Candle
	19, // 8: playground.TickDelta.invalid_orders:type_name -> playground.Order
	15, // 9: playground.TickDelta.events:type_name -> playground.TickDeltaEvent
	19, // 10: playground.LiquidationEvent.orders_placed:type_name -> playground.Order
	14, // 11: playground.TickDeltaEvent.liquidation_event:type_name -> playground.LiquidationEvent
	16, // 12: playground.Candle.bar:type_name -> playground.Bar
	18, // 13: playground.Order.trades:type_name -> playground.Trade
	18, // 14: playground.Order.closed_by:type_name -> playground.Trade
	19, // 15: playground.Order.closes:type_name -> playground.Order
	10, // 16: playground.GetAccountResponse.PositionsEntry.value:type_name -> playground.Position
	3,  // 17: playground.PlaygroundService.CreatePlayground:input_type -> playground.CreatePolygonPlaygroundRequest
	12, // 18: playground.PlaygroundService.NextTick:input_type -> playground.NextTickRequest
	11, // 19: playground.PlaygroundService.PlaceOrder:input_type -> playground.PlaceOrderRequest
	8,  // 20: playground.PlaygroundService.GetAccount:input_type -> playground.GetAccountRequest
	4,  // 21: playground.PlaygroundService.GetCandles:input_type -> playground.GetCandlesRequest
	1,  // 22: playground.PlaygroundService.GetOpenOrders:input_type -> playground.GetOpenOrdersRequest
	6,  // 23: playground.PlaygroundService.CreatePlayground:output_type -> playground.CreatePlaygroundResponse
	13, // 24: playground.PlaygroundService.NextTick:output_type -> playground.TickDelta
	19, // 25: playground.PlaygroundService.PlaceOrder:output_type -> playground.Order
	9,  // 26: playground.PlaygroundService.GetAccount:output_type -> playground.GetAccountResponse
	5,  // 27: playground.PlaygroundService.GetCandles:output_type -> playground.GetCandlesResponse
	0,  // 28: playground.PlaygroundService.GetOpenOrders:output_type -> playground.GetOpenOrdersResponse
	23, // [23:29] is the sub-list for method output_type
	17, // [17:23] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_src_playground_proto_init() }
func file_src_playground_proto_init() {
	if File_src_playground_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_playground_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_src_playground_proto_goTypes,
		DependencyIndexes: file_src_playground_proto_depIdxs,
		MessageInfos:      file_src_playground_proto_msgTypes,
	}.Build()
	File_src_playground_proto = out.File
	file_src_playground_proto_rawDesc = nil
	file_src_playground_proto_goTypes = nil
	file_src_playground_proto_depIdxs = nil
}
